{"version":3,"sources":["components/Display.js","buttonsArr.js","components/ButtonsPad.js","App.js","index.js","components/Button.js"],"names":["Display","result","calculations","className","id","buttonsArr","value","ButtonsPad","setCalculations","setResult","digit","setDigit","operatorArr","setOperatorArr","map","button","Button","App","useState","ReactDOM","render","StrictMode","document","getElementById","handleClick","conditions","console","log","prevState","length","split","slice","prevArray","eval","toString","includes","err","alert","onClick"],"mappings":"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","file":"static/js/main.c3c6265a.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Display({ result, calculations }) {\n  return (\n    <div className=\"display\">\n      <p>{calculations}</p>\n      <p id=\"display\">{result}</p>\n    </div>\n  );\n}\n\nexport default Display;\n","const buttonsArr = [\n  {\n    id: \"clear\",\n    value: \"AC\",\n  },\n  {\n    id: \"divide\",\n    value: \"/\",\n  },\n  {\n    id: \"multiply\",\n    value: \"x\",\n  },\n  {\n    id: \"seven\",\n    value: \"7\",\n  },\n  {\n    id: \"eight\",\n    value: \"8\",\n  },\n  {\n    id: \"nine\",\n    value: \"9\",\n  },\n  {\n    id: \"subtract\",\n    value: \"-\",\n  },\n  {\n    id: \"four\",\n    value: \"4\",\n  },\n  {\n    id: \"five\",\n    value: \"5\",\n  },\n  {\n    id: \"six\",\n    value: \"6\",\n  },\n  {\n    id: \"add\",\n    value: \"+\",\n  },\n  {\n    id: \"one\",\n    value: \"1\",\n  },\n  {\n    id: \"two\",\n    value: \"2\",\n  },\n  {\n    id: \"three\",\n    value: \"3\",\n  },\n  {\n    id: \"equals\",\n    value: \"=\",\n  },\n  {\n    id: \"zero\",\n    value: \"0\",\n  },\n  {\n    id: \"decimal\",\n    value: \".\",\n  },\n];\n\nexport default buttonsArr;\n","import React from \"react\";\n\nimport Button from \"./Button\";\nimport buttonsArr from \"../buttonsArr\";\n\nfunction ButtonsPad({\n  setCalculations,\n  calculations,\n  result,\n  setResult,\n  digit,\n  setDigit,\n  operatorArr,\n  setOperatorArr,\n}) {\n  return (\n    <div className=\"buttonsPad\">\n      {buttonsArr.map((button) => {\n        return (\n          <Button\n            id={button.id}\n            key={button.id}\n            value={button.value}\n            setCalculations={setCalculations}\n            calculations={calculations}\n            result={result}\n            setResult={setResult}\n            digit={digit}\n            setDigit={setDigit}\n            operatorArr={operatorArr}\n            setOperatorArr={setOperatorArr}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default ButtonsPad;\n","import \"./styles.scss\";\nimport React, { useState } from \"react\";\n\nimport Display from \"./components/Display\";\nimport ButtonsPad from \"./components/ButtonsPad\";\n\nfunction App() {\n  const [calculations, setCalculations] = useState(\"\");\n  const [result, setResult] = useState(\"0\");\n  const [digit, setDigit] = useState(\"\");\n  const [operatorArr, setOperatorArr] = useState([]);\n\n  // console.log(operatorArr);\n\n  return (\n    <div className=\"app\">\n      <div className=\"calculator\">\n        <Display result={result} calculations={calculations} />\n        <ButtonsPad\n          setCalculations={setCalculations}\n          calculations={calculations}\n          result={result}\n          setResult={setResult}\n          digit={digit}\n          setDigit={setDigit}\n          operatorArr={operatorArr}\n          setOperatorArr={setOperatorArr}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import React from \"react\";\n\nfunction Button({\n  id,\n  value,\n  setCalculations,\n  calculations,\n  result,\n  setResult,\n  digit,\n  setDigit,\n  operatorArr,\n  setOperatorArr,\n}) {\n  function handleClick() {\n    // Refactore code into using switch statement!\n    // Instead of one switch statement in one function rather use multiple functions for different actions?\n\n    const conditions = [\"/\", \"*\", \"-\", \"+\"];\n\n    try {\n      switch (id) {\n        case \"clear\":\n          setCalculations(\"\");\n          setResult(0);\n          console.log(\"CLEAR\");\n          break;\n        case \"divide\":\n          //setCalculations((prevState) => prevState + \" / \");\n          //setOperatorArr((prevArray) => [...prevArray, value]);\n          setCalculations((prevState) => {\n            //console.log(prevState.split(\"\")[prevState.split(\"\").length - 2]);\n            let length = prevState.length;\n            console.log(prevState.split(\"\"));\n            if (\n              (prevState.split(\"\")[length - 2] === \"-\" &&\n                prevState.split(\"\")[length - 5] === \"/\") ||\n              (prevState.split(\"\")[length - 2] === \"-\" &&\n                prevState.split(\"\")[length - 5] === \"+\") ||\n              (prevState.split(\"\")[length - 2] === \"-\" &&\n                prevState.split(\"\")[length - 5] === \"*\")\n            ) {\n              console.log(prevState);\n              return prevState.slice(0, length - 6) + \" / \";\n            }\n            if (\n              prevState.split(\"\")[length - 2] === \"/\" ||\n              prevState.split(\"\")[length - 2] === \"*\" ||\n              prevState.split(\"\")[length - 2] === \"-\" ||\n              prevState.split(\"\")[length - 2] === \"+\"\n            ) {\n              console.log(prevState);\n              return prevState.slice(0, length - 3) + \" / \";\n            }\n            return prevState + \" / \";\n          });\n          setResult(\"/\");\n          //console.log(\"DIVIDE\");\n          break;\n        case \"multiply\":\n          setOperatorArr((prevArray) => [...prevArray, \"*\"]);\n          setCalculations((prevState) => {\n            let length = prevState.length;\n            if (\n              (prevState.split(\"\")[length - 2] === \"-\" &&\n                prevState.split(\"\")[length - 5] === \"/\") ||\n              (prevState.split(\"\")[length - 2] === \"-\" &&\n                prevState.split(\"\")[length - 5] === \"+\") ||\n              (prevState.split(\"\")[length - 2] === \"-\" &&\n                prevState.split(\"\")[length - 5] === \"*\")\n            ) {\n              console.log(prevState);\n              return prevState.slice(0, length - 6) + \" * \";\n            }\n\n            if (\n              prevState.split(\"\")[length - 2] === \"/\" ||\n              prevState.split(\"\")[length - 2] === \"*\" ||\n              prevState.split(\"\")[length - 2] === \"-\" ||\n              prevState.split(\"\")[length - 2] === \"+\"\n            ) {\n              console.log(prevState);\n              return prevState.slice(0, length - 3) + \" * \";\n            }\n            return prevState + \" * \";\n          });\n          console.log(\"MULTIPLY\");\n          setResult(\"*\");\n          break;\n        case \"subtract\":\n          // To pass last test maybe use regex?\n          setOperatorArr((prevArray) => [...prevArray, value]);\n          setCalculations((prevState) => {\n            let length = prevState.length;\n\n            if (\n              (prevState.split(\"\")[length - 2] === \"-\" &&\n                prevState.split(\"\")[length - 5] === \"/\") ||\n              (prevState.split(\"\")[length - 2] === \"-\" &&\n                prevState.split(\"\")[length - 5] === \"+\") ||\n              (prevState.split(\"\")[length - 2] === \"-\" &&\n                prevState.split(\"\")[length - 5] === \"*\")\n            ) {\n              console.log(prevState);\n              return prevState.slice(0, length - 6) + \" - \";\n            }\n\n            if (prevState.split(\"\")[length - 2] === \"-\") {\n              console.log(prevState);\n              return prevState.slice(0, length - 3) + \" - \";\n            }\n            return prevState + \" - \";\n          });\n          setResult(\"-\");\n          console.log(\"SUBTRACT\");\n          break;\n        case \"add\":\n          setOperatorArr((prevArray) => [...prevArray, value]);\n          setCalculations((prevState) => {\n            let length = prevState.length;\n\n            if (\n              (prevState.split(\"\")[length - 2] === \"-\" &&\n                prevState.split(\"\")[length - 5] === \"/\") ||\n              (prevState.split(\"\")[length - 2] === \"-\" &&\n                prevState.split(\"\")[length - 5] === \"+\") ||\n              (prevState.split(\"\")[length - 2] === \"-\" &&\n                prevState.split(\"\")[length - 5] === \"*\")\n            ) {\n              console.log(prevState);\n              return prevState.slice(0, length - 6) + \" + \";\n            }\n\n            if (\n              prevState.split(\"\")[length - 2] === \"/\" ||\n              prevState.split(\"\")[length - 2] === \"*\" ||\n              prevState.split(\"\")[length - 2] === \"-\" ||\n              prevState.split(\"\")[length - 2] === \"+\"\n            ) {\n              console.log(prevState);\n              return prevState.slice(0, length - 3) + \" + \";\n            }\n            return prevState + \" + \";\n          });\n          setResult(\"+\");\n          console.log(\"ADD\");\n          break;\n        case \"equals\":\n          console.log(calculations);\n          console.log(eval(calculations));\n          setCalculations(eval(calculations).toString());\n          setResult(eval(calculations));\n          console.log(\"EQUALS\");\n          break;\n        case \"decimal\":\n          if (result.includes(\".\")) return;\n          setCalculations((prevState) => prevState + \".\");\n          setResult((prevState) => prevState + value);\n          console.log(\"DECIMAL\");\n          break;\n        default:\n          setResult((prevState) => {\n            //console.log(typeof prevState);\n            // Dont use strict equality for it to work\n            if (\n              prevState == 0 ||\n              prevState === \"/\" ||\n              prevState === \"*\" ||\n              prevState === \"-\" ||\n              prevState === \"+\"\n            ) {\n              return value;\n            }\n            return prevState + value;\n          });\n          // Check with an if statement inside of the setResult, to see what the prev state, if 0 do the required stuff (dont allow repeating), use same logic to check for operators or with double decimal dots\n          // Delete the unnecessary stuff\n          setCalculations((prevState) => {\n            //return prevState + value;\n            if (prevState == 0) {\n              return value;\n            }\n            return prevState + value;\n          });\n      }\n    } catch (err) {\n      console.log(err);\n      // Add material UI alert dialog component instead?\n      alert(\n        \"Don't end or start your calculations with an operator... Make sure the calculations ends or starts with a number.\"\n      );\n    }\n    /*\n    if (id === \"clear\") {\n      setCalculations(\"\");\n      console.log(\"CLEAR\");\n    } else if (id === \"divide\") {\n      setCalculations((prevState) => prevState + \" / \");\n      console.log(\"DIVIDE\");\n    } else if (id === \"multiply\") console.log(\"MULTIPLY\");\n    else if (id === \"subtract\") console.log(\"SUBTRACT\");\n    else if (id === \"add\") console.log(\"ADD\");\n    else if (id === \"equals\") {\n      console.log(eval(calculations));\n      console.log(\"EQUALS\");\n    } else if (id === \"decimal\") console.log(\"DECMIAL\");\n    else {\n      setCalculations((prevState) => prevState + value);\n    }*/\n  }\n\n  return (\n    <button id={id} className={id} onClick={handleClick}>\n      {value}\n    </button>\n  );\n}\n\nexport default Button;\n"],"sourceRoot":""}
{"version":3,"sources":["components/Display.js","buttonsArr.js","components/ButtonsPad.js","container/App.js","index.js","container/Context.js","components/Button.js"],"names":["Display","useContext","Context","result","calculations","fontSize","toString","length","className","id","style","buttonsArr","value","ButtonsPad","map","button","Button","App","ReactDOM","render","StrictMode","document","getElementById","React","createContext","ContextProvider","children","useState","setCalculations","setResult","Provider","calculatorLogic","caseValue","prevState","split","slice","strip","number","parseFloat","toPrecision","eval","includes","handleClick","err","console","log","alert","handleKeyDown","e","nodeList","querySelectorAll","blur","keyCode","key","useEffect","window","addEventListener","removeEventListener","onClick"],"mappings":"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","file":"static/js/main.98e066c6.chunk.js","sourcesContent":["import React, { useContext } from \"react\";\nimport { Context } from \"../container/Context\";\n\nfunction Display() {\n  const { result, calculations } = useContext(Context);\n\n  // Inline style used to make the font size of result smaller over certain lengths, to make sure the result stays in one line\n  const fontSize =\n    result.toString().length > 18\n      ? { fontSize: \"1.6rem\" }\n      : { fontSize: \"1.8rem\" };\n\n  return (\n    <div className=\"display\">\n      <div>{calculations}</div>\n      <div id=\"display\" style={fontSize}>\n        {result}\n      </div>\n    </div>\n  );\n}\n\nexport default Display;\n","const buttonsArr = [\n  {\n    id: \"clear\",\n    value: \"AC\",\n  },\n  {\n    id: \"divide\",\n    value: \"/\",\n  },\n  {\n    id: \"multiply\",\n    value: \"x\",\n  },\n  {\n    id: \"seven\",\n    value: \"7\",\n  },\n  {\n    id: \"eight\",\n    value: \"8\",\n  },\n  {\n    id: \"nine\",\n    value: \"9\",\n  },\n  {\n    id: \"subtract\",\n    value: \"-\",\n  },\n  {\n    id: \"four\",\n    value: \"4\",\n  },\n  {\n    id: \"five\",\n    value: \"5\",\n  },\n  {\n    id: \"six\",\n    value: \"6\",\n  },\n  {\n    id: \"add\",\n    value: \"+\",\n  },\n  {\n    id: \"one\",\n    value: \"1\",\n  },\n  {\n    id: \"two\",\n    value: \"2\",\n  },\n  {\n    id: \"three\",\n    value: \"3\",\n  },\n  {\n    id: \"equals\",\n    value: \"=\",\n  },\n  {\n    id: \"zero\",\n    value: \"0\",\n  },\n  {\n    id: \"decimal\",\n    value: \".\",\n  },\n];\n\nexport default buttonsArr;\n","import React from \"react\";\n\nimport Button from \"./Button\";\nimport buttonsArr from \"../buttonsArr\";\n\nfunction ButtonsPad() {\n  return (\n    <div className=\"buttonsPad\">\n      {buttonsArr.map((button) => {\n        return <Button id={button.id} key={button.id} value={button.value} />;\n      })}\n    </div>\n  );\n}\n\nexport default ButtonsPad;\n","import \"../styles.scss\";\nimport React from \"react\";\n\nimport Display from \"../components/Display\";\nimport ButtonsPad from \"../components/ButtonsPad\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <div className=\"calculator\">\n        <Display />\n        <ButtonsPad />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./container/App\";\nimport { ContextProvider } from \"./container/Context\";\n\nReactDOM.render(\n  <ContextProvider>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </ContextProvider>,\n  document.getElementById(\"root\")\n);\n","import React, { useState } from \"react\";\n\nconst Context = React.createContext();\n\nfunction ContextProvider({ children }) {\n  // The calculation\n  const [calculations, setCalculations] = useState(\"0\");\n\n  // Store the result of the calculation\n  const [result, setResult] = useState(\"0\");\n\n  return (\n    <Context.Provider\n      value={{ calculations, setCalculations, result, setResult }}\n    >\n      {children}\n    </Context.Provider>\n  );\n}\n\nexport { Context, ContextProvider };\n","import React, { useEffect, useContext } from \"react\";\nimport { Context } from \"../container/Context\";\n\nfunction Button({ id, value }) {\n  const { calculations, setCalculations, result, setResult } =\n    useContext(Context);\n\n  // Refactored from switch statement to if/else so that I can use logical operators (might be a bit slower now) and to shorten the code (no repeating of logic)\n  function calculatorLogic(caseValue) {\n    if (caseValue === \"clear\" || caseValue === \"Backspace\") {\n      setCalculations(\"0\");\n      setResult(\"0\");\n    } else if (caseValue === \"divide\" || caseValue === \"/\") {\n      setCalculations((prevState) => {\n        let length = prevState.length;\n        // If statement checks whether the calculations ends with any of the possible operators and the operator - and if it does it replaces them with the clicked operator (In this case with divider \" / \")\n        // - 2 and - 5 used, because each operator has one empty space on its right and left\n        // This was done to solve User Story #13 (If 2 or more operators are entered consecutively, the operation performed should be the last operator entered (excluding the negative (-) sign).)\n        if (\n          (prevState.split(\"\")[length - 2] === \"-\" &&\n            prevState.split(\"\")[length - 5] === \"/\") ||\n          (prevState.split(\"\")[length - 2] === \"-\" &&\n            prevState.split(\"\")[length - 5] === \"+\") ||\n          (prevState.split(\"\")[length - 2] === \"-\" &&\n            prevState.split(\"\")[length - 5] === \"*\")\n        ) {\n          return prevState.slice(0, length - 6) + \" / \";\n        }\n        // Done for the same reasons as above if statement, with the difference that this if statement is used for cases where only one operator is present in the calculation\n        // This was done to solve User Story #13 (If 2 or more operators are entered consecutively, the operation performed should be the last operator entered (excluding the negative (-) sign).)\n        // This same logic is repeated below for every operator\n        if (\n          prevState.split(\"\")[length - 2] === \"/\" ||\n          prevState.split(\"\")[length - 2] === \"*\" ||\n          prevState.split(\"\")[length - 2] === \"-\" ||\n          prevState.split(\"\")[length - 2] === \"+\"\n        ) {\n          return prevState.slice(0, length - 3) + \" / \";\n        }\n        return prevState + \" / \";\n      });\n      setResult(\"/\");\n    } else if (caseValue === \"multiply\" || caseValue === \"*\") {\n      setCalculations((prevState) => {\n        let length = prevState.length;\n        if (\n          (prevState.split(\"\")[length - 2] === \"-\" &&\n            prevState.split(\"\")[length - 5] === \"/\") ||\n          (prevState.split(\"\")[length - 2] === \"-\" &&\n            prevState.split(\"\")[length - 5] === \"+\") ||\n          (prevState.split(\"\")[length - 2] === \"-\" &&\n            prevState.split(\"\")[length - 5] === \"*\")\n        ) {\n          return prevState.slice(0, length - 6) + \" * \";\n        }\n\n        if (\n          prevState.split(\"\")[length - 2] === \"/\" ||\n          prevState.split(\"\")[length - 2] === \"*\" ||\n          prevState.split(\"\")[length - 2] === \"-\" ||\n          prevState.split(\"\")[length - 2] === \"+\"\n        ) {\n          return prevState.slice(0, length - 3) + \" * \";\n        }\n        return prevState + \" * \";\n      });\n      setResult(\"*\");\n    } else if (caseValue === \"subtract\" || caseValue === \"-\") {\n      setCalculations((prevState) => {\n        let length = prevState.length;\n\n        if (\n          (prevState.split(\"\")[length - 2] === \"-\" &&\n            prevState.split(\"\")[length - 5] === \"/\") ||\n          (prevState.split(\"\")[length - 2] === \"-\" &&\n            prevState.split(\"\")[length - 5] === \"+\") ||\n          (prevState.split(\"\")[length - 2] === \"-\" &&\n            prevState.split(\"\")[length - 5] === \"*\")\n        ) {\n          return prevState.slice(0, length - 6) + \" - \";\n        }\n\n        if (prevState.split(\"\")[length - 2] === \"-\") {\n          return prevState.slice(0, length - 3) + \" - \";\n        }\n        return prevState + \" - \";\n      });\n      setResult(\"-\");\n    } else if (caseValue === \"add\" || caseValue === \"+\") {\n      setCalculations((prevState) => {\n        let length = prevState.length;\n\n        if (\n          (prevState.split(\"\")[length - 2] === \"-\" &&\n            prevState.split(\"\")[length - 5] === \"/\") ||\n          (prevState.split(\"\")[length - 2] === \"-\" &&\n            prevState.split(\"\")[length - 5] === \"+\") ||\n          (prevState.split(\"\")[length - 2] === \"-\" &&\n            prevState.split(\"\")[length - 5] === \"*\")\n        ) {\n          return prevState.slice(0, length - 6) + \" + \";\n        }\n\n        if (\n          prevState.split(\"\")[length - 2] === \"/\" ||\n          prevState.split(\"\")[length - 2] === \"*\" ||\n          prevState.split(\"\")[length - 2] === \"-\" ||\n          prevState.split(\"\")[length - 2] === \"+\"\n        ) {\n          return prevState.slice(0, length - 3) + \" + \";\n        }\n        return prevState + \" + \";\n      });\n      setResult(\"+\");\n    } else if (caseValue === \"equals\" || caseValue === \"Enter\") {\n      // Function strip used to fix imprecise calculations in JS https://vyspiansky.github.io/2019/01/20/imprecise-calculations-in-javascript/\n      function strip(number) {\n        return parseFloat(number.toPrecision(16));\n      }\n      setCalculations(strip(eval(calculations)).toString());\n      setResult(strip(eval(calculations)).toString());\n    } else if (caseValue === \"decimal\" || caseValue === \".\") {\n      if (result.includes(\".\")) return;\n      setCalculations((prevState) => prevState + \".\");\n      setResult((prevState) => prevState + value);\n    } else {\n      setResult((prevState) => {\n        // Dont use strict equality with 0 for it to work\n        if (\n          prevState == \"0\" ||\n          prevState === \"/\" ||\n          prevState === \"*\" ||\n          prevState === \"-\" ||\n          prevState === \"+\"\n        ) {\n          return value;\n        }\n        return prevState + value;\n      });\n      setCalculations((prevState) => {\n        if (prevState == \"0\") {\n          return value;\n        }\n        return prevState + value;\n      });\n    }\n  }\n\n  function handleClick() {\n    try {\n      calculatorLogic(id);\n    } catch (err) {\n      console.log(err);\n      // Add material UI alert dialog component instead?\n      alert(\n        \"Don't end or start your calculations with an operator... Make sure the calculations ends or starts with a number.\"\n      );\n    }\n  }\n\n  function handleKeyDown(e) {\n    // Set focus away here to make sure no buttons are still focused from the handleClick function which causes a bug when you try to first use clicking with calculator and then keyboard controls\n    const nodeList = document.querySelectorAll(\"button\");\n    [...nodeList].map((button) => button.blur());\n\n    // https://www.cambiaresearch.com/articles/15/javascript-char-codes-key-codes\n    const keyCodeArr = [\n      8, 13, 49, 50, 51, 52, 53, 54, 55, 56, 57, 96, 97, 98, 99, 100, 101, 102,\n      103, 104, 105, 106, 107, 109, 110, 111, 190,\n    ];\n    if (keyCodeArr.includes(e.keyCode)) {\n      value = e.key === \",\" ? \".\" : e.key;\n      try {\n        calculatorLogic(value);\n      } catch (err) {\n        console.log(err);\n        // Add material UI alert dialog component instead?\n        setCalculations(\"0\");\n        setResult(\"0\");\n        alert(\n          \"Don't end or start your calculations with an operator... Make sure the calculations ends or starts with a number.\"\n        );\n      }\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleKeyDown);\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  });\n\n  return (\n    <button id={id} className={id} onClick={handleClick}>\n      {value}\n    </button>\n  );\n}\n\nexport default Button;\n"],"sourceRoot":""}